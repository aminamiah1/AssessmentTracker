variables:
  DATABASE_URL: $DATABASE_URL

stages: # List of stages for jobs, and their order of execution
    - build
    - test
    - deploy

build-job: # This job runs in the build stage, which runs first.
    stage: build
    image: node:18.18.2-alpine3.18 # Same image as the base image in the Dockerfile
    script:
        - npm ci
        - echo "Connecting to Prisma database..."
        - prisma init $DATABASE_URL
        - npm run build

unit-test-job: # This job runs in the test stage.
    stage: test # It only starts when the job in the build stage completes successfully.
    script:
        - echo "EXAMPLE Running unit tests... This will take about 10 seconds."
        - echo "EXAMPLE Code coverage is 90%"

lint-test-job: # This job also runs in the test stage.
    stage: test # It can run at the same time as unit-test-job (in parallel).
    script:
        - echo "EXAMPLE Linting code... This will take about 10 seconds."
        - echo "EXAMPLE No lint issues found."

deploy-job: # This job runs in the deploy stage.
    stage: deploy # It only runs when *both* jobs in the test stage complete successfully.
    # environment: production
    image: openshift/origin-cli
    script:
        - oc login --token=$OPENSHIFT_TOKEN --server=$OPENSHIFT_API_URL --insecure-skip-tls-verify=true
        - oc project $OPENSHIFT_PROJECT
        - oc registry login --registry $REGISTRY_HOST
        - oc start-build assessmenttracking-cicd-dockerfile --follow
